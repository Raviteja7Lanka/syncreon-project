{"ast":null,"code":"import _slicedToArray from \"/Users/ravitejalanka/Desktop/syncreon-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/ravitejalanka/Desktop/syncreon-project/src/Upload.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport { Button, Form } from 'react-bootstrap';\nvar Upload = function Upload() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFile = _useState2[0],\n    setSelectedFile = _useState2[1];\n  var onFilePicked = function onFilePicked(e) {\n    var files = e.target.files;\n    if (files.length > 0) {\n      var fileToUpload = files[0];\n      if (fileToUpload.name.endsWith('.xml')) {\n        setSelectedFile(fileToUpload);\n      } else {\n        setSelectedFile(null);\n        window.alert('File is not an XML');\n        window.location.reload();\n      }\n    }\n  };\n  var uploadToDb = function uploadToDb() {\n    if (selectedFile !== null) {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/xml\");\n      var file = \"<file contents here>\";\n      var reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = function (evt) {\n        document.getElementById(\"fileContents\").innerHTML = evt.target.result;\n      };\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: file,\n        redirect: 'follow'\n      };\n      fetch(\"http://localhost:4000/api/upload\", requestOptions).then(function (response) {\n        return response.text();\n      }).then(function (result) {\n        return console.log(result);\n      }).catch(function (error) {\n        return console.log('error', error);\n      });\n      var formData = new FormData();\n      formData.append('file', selectedFile);\n      fetch('http://localhost:4000/api/upload', {\n        method: 'POST',\n        body: formData\n      }).then(function (response) {\n        if (response.ok) {\n          window.alert('File uploaded successfully');\n          window.location.reload();\n        } else {\n          window.alert('Error uploading file');\n        }\n      }).catch(function (error) {\n        return window.alert('Error uploading file');\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formFile\",\n    className: \"mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Upload an XML file\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"file\",\n    onChange: onFilePicked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-primary\",\n    onClick: uploadToDb,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, \"Upload\"));\n};\nexport default Upload;","map":{"version":3,"names":["React","useState","Button","Form","Upload","_useState","_useState2","_slicedToArray","selectedFile","setSelectedFile","onFilePicked","e","files","target","length","fileToUpload","name","endsWith","window","alert","location","reload","uploadToDb","myHeaders","Headers","append","file","reader","FileReader","readAsText","onload","evt","document","getElementById","innerHTML","result","requestOptions","method","headers","body","redirect","fetch","then","response","text","console","log","catch","error","formData","FormData","ok","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","className","Label","Control","type","onChange","onClick"],"sources":["/Users/ravitejalanka/Desktop/syncreon-project/src/Upload.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport './App.css'\nimport { Button, Form } from 'react-bootstrap';\n\nconst Upload = () => {\n\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const onFilePicked = (e) => {\n    const files = e.target.files;\n    if (files.length > 0) {\n      const fileToUpload = files[0];\n      if (fileToUpload.name.endsWith('.xml')) {\n        setSelectedFile(fileToUpload)\n      } else {\n        setSelectedFile(null)\n        window.alert('File is not an XML')\n        window.location.reload()\n      }\n    }\n  }\n\n  const uploadToDb = () => {\n    if (selectedFile !== null) {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/xml\");\n\n      var file = \"<file contents here>\";\n\n      var reader = new FileReader();\n    reader.readAsText(file, \"UTF-8\");\n    reader.onload = function (evt) {\n        document.getElementById(\"fileContents\").innerHTML = evt.target.result;\n    }\n\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: file,\n        redirect: 'follow'\n      };\n\n      fetch(\"http://localhost:4000/api/upload\", requestOptions)\n        .then(response => response.text())\n        .then(result => console.log(result))\n        .catch(error => console.log('error', error));\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n\n      fetch('http://localhost:4000/api/upload', {\n        method: 'POST',\n        body: formData\n      }).then(response => {\n        if (response.ok) {\n          window.alert('File uploaded successfully');\n          window.location.reload();\n        } else {\n          window.alert('Error uploading file');\n        }\n      }).catch(error => window.alert('Error uploading file'));\n    }\n  }\n\n  return <div>\n    <Form.Group controlId=\"formFile\" className=\"mb-3\">\n      <Form.Label>Upload an XML file</Form.Label>\n      <Form.Control type=\"file\" onChange={onFilePicked} />\n    </Form.Group>\n    <Button className='btn btn-primary' onClick={uploadToDb}>Upload</Button>\n  </div>\n\n}\n\nexport default Upload;"],"mappings":"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"},"metadata":{},"sourceType":"module"}