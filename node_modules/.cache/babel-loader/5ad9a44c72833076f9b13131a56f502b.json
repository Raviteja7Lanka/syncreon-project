{"ast":null,"code":"import _slicedToArray from \"/Users/ravitejalanka/Desktop/syncreon-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/ravitejalanka/Desktop/syncreon-project/src/Upload.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport { Button, Form } from 'react-bootstrap';\nvar Upload = function Upload() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedFile = _useState2[0],\n    setSelectedFile = _useState2[1];\n  var onFilePicked = function onFilePicked(e) {\n    var files = e.target.files;\n    if (files.length > 0) {\n      var fileToUpload = files[0];\n      if (fileToUpload.name.endsWith('.xml')) {\n        setSelectedFile(fileToUpload);\n      } else {\n        setSelectedFile(null);\n        window.alert('File is not an XML');\n        window.location.reload();\n      }\n    }\n  };\n  var uploadToDb = function uploadToDb() {\n    if (selectedFile !== null) {\n      var reader = new FileReader();\n      reader.readAsText(selectedFile, \"UTF-8\");\n      reader.onload = function (e) {\n        var fileStr = e.target.result;\n        fetch(\"http://localhost:4000/api/upload\", {\n          method: 'POST',\n          headers: myHeaders,\n          body: fileStr,\n          redirect: 'follow'\n        }).then(function (response) {\n          return response.text();\n        }).then(function (result) {\n          return console.log(result);\n        }).catch(function (error) {\n          return console.log('error', error);\n        });\n      };\n      reader.onerror = function () {\n        window.alert('An error occurred');\n      };\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formFile\",\n    className: \"mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Upload an XML file\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"file\",\n    onChange: onFilePicked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-primary\",\n    onClick: uploadToDb,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, \"Upload\"));\n};\nexport default Upload;","map":{"version":3,"names":["React","useState","Button","Form","Upload","_useState","_useState2","_slicedToArray","selectedFile","setSelectedFile","onFilePicked","e","files","target","length","fileToUpload","name","endsWith","window","alert","location","reload","uploadToDb","reader","FileReader","readAsText","onload","fileStr","result","fetch","method","headers","myHeaders","body","redirect","then","response","text","console","log","catch","error","onerror","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","className","Label","Control","type","onChange","onClick"],"sources":["/Users/ravitejalanka/Desktop/syncreon-project/src/Upload.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport './App.css'\nimport { Button, Form } from 'react-bootstrap';\n\nconst Upload = () => {\n\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const onFilePicked = (e) => {\n    const files = e.target.files;\n    if (files.length > 0) {\n      const fileToUpload = files[0];\n      if (fileToUpload.name.endsWith('.xml')) {\n        setSelectedFile(fileToUpload)\n      } else {\n        setSelectedFile(null)\n        window.alert('File is not an XML')\n        window.location.reload()\n      }\n    }\n  }\n\n  const uploadToDb = () => {\n    if (selectedFile !== null) {\n\n      var reader = new FileReader();\n      reader.readAsText(selectedFile, \"UTF-8\");\n      reader.onload = (e) => {\n        const fileStr = e.target.result;  \n        fetch(\"http://localhost:4000/api/upload\", {\n          method: 'POST',\n          headers: myHeaders,\n          body: fileStr,\n          redirect: 'follow'\n        })\n          .then(response => response.text())\n          .then(result => console.log(result))\n          .catch(error => console.log('error', error));\n      }\n\n      reader.onerror = () => {\n        window.alert('An error occurred')\n      }\n    }\n  }\n\n  return <div>\n    <Form.Group controlId=\"formFile\" className=\"mb-3\">\n      <Form.Label>Upload an XML file</Form.Label>\n      <Form.Control type=\"file\" onChange={onFilePicked} />\n    </Form.Group>\n    <Button className='btn btn-primary' onClick={uploadToDb}>Upload</Button>\n  </div>\n\n}\n\nexport default Upload;"],"mappings":"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"},"metadata":{},"sourceType":"module"}